<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>