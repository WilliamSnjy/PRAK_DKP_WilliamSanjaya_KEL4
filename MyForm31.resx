<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8AwTeSy5krK1ve4tkPMWNWGX7GjitSncztaN9inpubvKtSrUoyqSpq0VKNJ04x46zqyqRjFw4dnrbtk7
        TX68Mo6f03afSD1+Mnae/HKH57tPpCc4OMtN5Vy5vT2WZMJWOZmyNf4Q3arEvSFtQpXL/ccZVp03OMVF
        K7nVg4ey1pUKM4PWpVittbuFrtFtMlOW0+8wq6zLKpNVFhSpqwUekm4ujolPh4HBfbPZvRtrVs+v19Mn
        Nc835S/Pdp9IUe3LJ6XPOGU9P6btPpBzg2lm/T6t9hT0x/3yMJjtyye178Mpa/05afSB7ccnJ6fXhlNP
        w43a/SF5wbSzb0yHccjB1t0ydKT/AMscpa9yxu11/wCYVW3XJqXvxylqv5btfpBzg2lm6uH2tMOu5LTv
        MGlt4yY178sov8d2v0g9ffJa5fXjlNa/y3a/SDnGTjLNunSfMrKrxPkYMtvOTX1Zwyl+erXzy71+cnN+
        /DKf56tfPJzjJtLNnV162ijqpf4mEPbvkxPnnHKa8eNWvnlHt5yZH7scqL8c23nl51ybSzd1kl3DpvCj
        B3t8yWn78Mqv8cW3nlr295Lb5Zvyo/D6sWz/AGxzjJtLOukT5MnhUS5mBQ29ZMb9+GVfzxbeefRQ295K
        m3pnDKmq/li288c4ybSzyEk/hJ4zTZg1HbrkyaXDnDKr8WMW/nk1PbdlCbajmzLDfgxa3b/tjnXJtLMK
        tfhclr1ciHC67eacIitX+7aS/SR+DR2i4Ff01KjjmEVoy56072nNcvFIty1tEwO52s5Uwn1Tt6l7i15J
        2tGhJVJVOipzqyb05KKUHq336Ic65NpeiwE9UDJApJKPMqOsDw5s9yVi2yzaXtOp4phtzaWmI5ovb6xc
        tZdPTq1ZTU48Ouqafbz5mC7wGF4pmGyqulhGI3cWm9IWtRy17OWnM9gbw+T+ivKWK0oewrxVOq0uqa6m
        /Gv1GoL2XDKS0Rx26Os/V0R1Fo+jnXnbYxmifTVY5QzB0cXxOTw6o1Fa9evD1GG3mwPN9JzjLJuZVJvs
        wWu1/YOk+YLeGKYdc2tSUqcLmlKjKUXzgpJx4l4Vrr8B+ZkHHrnHMo2lS7bjf0E7W9jxe1uKT6Op5ZR4
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB//2Q==
</value>
  </data>
</root>